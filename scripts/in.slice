clear


variable gbname index STGB_210 #should be selected by user
variable structure_name index surface_thermal_relaxed_T500_steps1000.dat #should be selected by user
variable input index slice_input

variable self index slicing
variable dat index dat
variable slices index slices
variable pot_path index potentials
variable path index GB_projects
variable home index scripts
variable thermo_output index thermo_output
variable dump index dumps
variable structure index ${path}/${gbname}/${dat}/${structure_name}
variable gbpath index ${path}/${gbname}
variable oriname index ../${path}/${gbname}/orientation.txt

shell mkdir ../${gbpath}/logs
log ../${gbpath}/logs/${self}.log
shell rm log.lammps

variable dump_path index ${gbpath}/${dump}/${self}
shell mkdir ../${gbpath}/${dump}
shell mkdir ../${dump_path}

shell mkdir ../${gbpath}/${slices}

include ../${gbpath}/${input}.txt
include ../${gbpath}/input.txt
print "%%%%%%%%%%%%%%%%%%%%%%%%%"
print "----------slice input----------"
shell cat ../${gbpath}/${input}.txt
print " "
print "%%%%%%%%%%%%%%%%%%%%%%%%%"
print " "
print "%%%%%%%%%%%%%%%%%%%%%%%%%"
print "----------input----------"
shell cat ../${gbpath}/input.txt
print " "
print "%%%%%%%%%%%%%%%%%%%%%%%%%"

variable Nx equal "v_nx*v_SR_nx*v_S_nx"
print "Nx = ${Nx}"

read_data ../${structure} 

if "${type} == pure" then "set type 2 type 1"
variable xlen equal "v_nx_len*lx/v_Nx"
print "xlen = ${xlen}"

if "${type} == pure" then "variable potname index ${potname_pure}"
if "${type} == alloy" then "variable potname index ${potname_alloy}"
shell cd ../${pot_path}
include ${potname}
shell cd ../${home}

compute z0 all reduce max z
compute eng all pe/atom 
compute eatoms all reduce sum c_eng
variable file_tmp index z0.txt
fix tmp all print 1 "variable z0 equal $(c_z0)" file ${file_tmp} screen yes
run 0
variable z0 delete
include ${file_tmp}
unfix tmp
uncompute z0
print "${z0}"
shell rm ${file_tmp}
write_dump all cfg ../${dump_path}/dump_1.cfg mass type xs ys zs
change_box all boundary f f f
change_box all x final $(v_x0-v_xlen/2) $(v_x0+v_xlen/2) units box
write_dump all cfg ../${dump_path}/dump_2.cfg mass type xs ys zs 
change_box all z final $(v_z0-v_Lz) $(v_z0+v_Lvac) units box
write_dump all cfg ../${dump_path}/dump_3.cfg mass type xs ys zs
region outside block EDGE EDGE EDGE EDGE EDGE EDGE side out 
delete_atoms region outside compress yes
region outside delete
write_dump all cfg ../${dump_path}/dump_4.cfg mass type xs ys zs
change_box all boundary p p f



shell mkdir ../${gbpath}/${slices}

shell cd ../${gbpath}/${slices} 
write_data ${input}.dat

dump out all cfg 1 ${input}*.cfg mass type xs ys zs id c_eng
dump_modify out element Ag Ni
reset_timestep 0
run 0
shell mv ${input}0.cfg ${input}.cfg 
shell cd ../../../${home}
